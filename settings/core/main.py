"""
Django settings for dms project.

Generated by 'django-admin startproject' using Django.

For more information on this file, see
https://docs.djangoproject.com/en/stable/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/stable/ref/settings/

For when deploying to a production environment, see
https://docs.djangoproject.com/en/stable/howto/deployment/checklist/
"""

from pathlib import Path

from decouple import Csv, config

# Build paths inside the project like this: BASE_DIR / 'subdir'.

BASE_DIR = Path(__file__).resolve().parent.parent.parent
LIB_DIR = BASE_DIR / "lib"
LIB_DIR.mkdir(parents=True, exist_ok=True)

# * SECURITY WARNING: keep the SECRET_KEY used in production secret!
# * SECURITY WARNING: don't run with DEBUG turned on in production!

SECRET_KEY = config("SECRET_KEY", default="Make sure to set your own secret key!")
DEBUG = config("ENVIRONMENT", default="development") != "production"
ALLOWED_HOSTS = config("ALLOWED_HOSTS", cast=Csv(), default="localhost,127.0.0.1")

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "django_filters",
    "sass_processor",
    "phonenumber_field",
    "django_ckeditor_5",
    "apps.core",
    "apps.blog",
]

if DEBUG:
    INSTALLED_APPS.append("django_browser_reload")

ROOT_URLCONF = config("ROOT_URLCONF", default="settings.core.urls")
WSGI_APPLICATION = "settings.core.wsgi.application"


# Site-specific settings
SITE_URL = config("SITE_URL", default="https://preview.bigpen.co.ke")
SITE_NAME = config("SITE_NAME", default="Online BigPen Kenya")
SITE_SHORT_NAME = config("SITE_SHORT_NAME", default="BigPen")
SITE_DESCRIPTION = config("SITE_DESCRIPTION", default="Delivering Stationery Supplies")
SITE_THEME_COLOR = config("SITE_THEME_COLOR", default="#ef4444")
SITE_KEYWORDS = config(
    "SITE_KEYWORDS", default="bigpen, Online BigPen Kenya, ecommerce"
)

SITE_LOGO = config("SITE_LOGO", default="/lib/static/core/img/logo.png")
SITE_FAVICON = config("SITE_FAVICON", default="/lib/static/core/img/favicon.ico")
SITE_APPLE_TOUCH_ICON = config(
    "SITE_APPLE_TOUCH_ICON", default="/lib/static/core/img/apple-touch-icon.png"
)
SITE_ANDROID_CHROME_ICON = config(
    "SITE_ANDROID_CHROME_ICON", default="/lib/static/core/img/android-chrome-icon.png"
)
SITE_MSTILE = config("SITE_MSTILE", default="/lib/static/core/img/mstile.png")
SITE_HERO = config("SITE_HERO", default="/lib/static/core/img/hero.jpg")
SITE_MANIFEST = config("SITE_MANIFEST", default="/lib/static/core/manifest.webmanifest")

SITE_AUTHOR = config("SITE_AUTHOR", default="christianwhocodes")
SITE_AUTHOR_URL = config(
    "SITE_AUTHOR_URL", default="https://github.com/christianwhocodes/"
)
SITE_NAVIGATION_TYPE = config("SITE_NAVIGATION_TYPE", default="navbar")


# Databases
# https://docs.djangoproject.com/en/stable/ref/settings/#databases
# https://docs.djangoproject.com/en/stable/ref/databases/

DB_BACKEND = config("DB_BACKEND", default="sqlite3")

if DB_BACKEND == "sqlite3":
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": LIB_DIR / f"{config('DB_NAME', default='db')}.sqlite3",
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": f"django.db.backends.{DB_BACKEND}",
            "NAME": config("DB_NAME"),
            "USER": config("DB_USER", default="postgres"),
            "PASSWORD": config("DB_PASSWORD", default="postgres"),
            "HOST": config("DB_HOST", default="localhost"),
            "PORT": config("DB_PORT", default="5432"),
        }
    }


# Email
# https://docs.djangoproject.com/en/stable/topics/email/

EMAIL_BACKEND = config(
    "EMAIL_BACKEND", default="django.core.mail.backends.console.EmailBackend"
)

EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_PORT = "587"
EMAIL_HOST_USER = config("EMAIL_HOST_USER", default=None)
EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD", default=None)
EMAIL_HOST = config("EMAIL_HOST", default=None)


# Default Auto Field
# https://docs.djangoproject.com/en/stable/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# Auth Password Validators
# https://docs.djangoproject.com/en/stable/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# Middleware
# https://docs.djangoproject.com/en/stable/topics/http/middleware/
# https://docs.djangoproject.com/en/stable/ref/middleware/

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

if DEBUG:
    MIDDLEWARE.append("django_browser_reload.middleware.BrowserReloadMiddleware")


# Templates
# https://docs.djangoproject.com/en/stable/topics/templates/
# https://docs.djangoproject.com/en/stable/ref/settings/#templates

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]


# Static & Media files (CSS, Sass/SCSS, JavaScript, Images)
# https://docs.djangoproject.com/en/stable/howto/static-files/
# https://docs.djangoproject.com/en/stable/ref/settings/#media-files

STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    "sass_processor.finders.CssFinder",
]

SASS_PRECISION = 8

STATIC_URL = "lib/static/"
MEDIA_URL = "lib/media/"
STATIC_ROOT = LIB_DIR / "static"
MEDIA_ROOT = LIB_DIR / "media"


# Internationalization
# https://docs.djangoproject.com/en/stable/topics/i18n/

LANGUAGE_CODE = "en-us"
TIME_ZONE = "Africa/Nairobi"
USE_I18N = True
USE_TZ = True


# ckeditor 5
# https://pypi.org/project/django-ckeditor-5/

CKEDITOR_5_CUSTOM_CSS = "core/init/ckeditor/init.css"

# Define a custom color palette for the editor
customColorPalette = [
    {"color": "hsl(4, 90%, 58%)", "label": "Red"},
    {"color": "hsl(340, 82%, 52%)", "label": "Pink"},
    {"color": "hsl(291, 64%, 42%)", "label": "Purple"},
    {"color": "hsl(262, 52%, 47%)", "label": "Deep Purple"},
    {"color": "hsl(231, 48%, 48%)", "label": "Indigo"},
    {"color": "hsl(207, 90%, 54%)", "label": "Blue"},
]

# CKEditor 5 configurations
CKEDITOR_5_CONFIGS = {
    "default": {
        "toolbar": {
            "items": [
                "heading",
                "|",
                "bold",
                "italic",
                "link",
                "bulletedList",
                "numberedList",
                "blockQuote",
                "imageUpload",
                "|",
                "fontColor",
                "fontBackgroundColor",
                "|",
                "undo",
                "redo",
            ],
            "shouldNotGroupWhenFull": True,  # Ensure this setting is correctly applied
        },
        "fontColor": {
            "colors": customColorPalette,
            "defaultColor": "hsl(0, 0%, 0%)",  # Default text color
        },
        "fontBackgroundColor": {
            "colors": customColorPalette,
        },
    },
    "extends": {
        "toolbar": {
            "items": [
                "heading",
                "|",
                "outdent",
                "indent",
                "|",
                "bold",
                "italic",
                "link",
                "underline",
                "strikethrough",
                "code",
                "subscript",
                "superscript",
                "highlight",
                "|",
                "codeBlock",
                "sourceEditing",
                "insertImage",
                "bulletedList",
                "numberedList",
                "todoList",
                "|",
                "blockQuote",
                "imageUpload",
                "|",
                "fontSize",
                "fontFamily",
                "fontColor",
                "fontBackgroundColor",
                "mediaEmbed",
                "removeFormat",
                "insertTable",
            ],
            "shouldNotGroupWhenFull": True,  # Ensure this setting is correctly applied
        },
        "image": {
            "toolbar": [
                "imageTextAlternative",
                "|",
                "imageStyle:alignLeft",
                "imageStyle:alignRight",
                "imageStyle:alignCenter",
                "imageStyle:side",
                "|",
            ],
            "styles": [
                "full",
                "side",
                "alignLeft",
                "alignRight",
                "alignCenter",
            ],
        },
        "table": {
            "contentToolbar": [
                "tableColumn",
                "tableRow",
                "mergeTableCells",
                "tableProperties",
                "tableCellProperties",
            ],
            "tableProperties": {
                "borderColors": customColorPalette,
                "backgroundColors": customColorPalette,
            },
            "tableCellProperties": {
                "borderColors": customColorPalette,
                "backgroundColors": customColorPalette,
            },
        },
        "heading": {
            "options": [
                {
                    "model": "paragraph",
                    "title": "Paragraph",
                    "class": "ck-heading_paragraph",
                },
                {
                    "model": "heading1",
                    "view": "h1",
                    "title": "Heading 1",
                    "class": "ck-heading_heading1",
                },
                {
                    "model": "heading2",
                    "view": "h2",
                    "title": "Heading 2",
                    "class": "ck-heading_heading2",
                },
                {
                    "model": "heading3",
                    "view": "h3",
                    "title": "Heading 3",
                    "class": "ck-heading_heading3",
                },
            ]
        },
    },
    "list": {
        "properties": {
            "styles": "true",
            "startIndex": "true",
            "reversed": "true",
        }
    },
}
