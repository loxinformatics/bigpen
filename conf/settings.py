"""
Django settings for dms project.

Generated by 'django-admin startproject' using Django.

For more information on this file, see
https://docs.djangoproject.com/en/stable/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/stable/ref/settings/

For when deploying to a production environment, see
https://docs.djangoproject.com/en/stable/howto/deployment/checklist/
"""

from pathlib import Path

from decouple import Csv, config
from django.core.exceptions import ImproperlyConfigured
from django.db.utils import OperationalError

# Build paths inside the project like this: BASE_DIR / 'subdir'.

BASE_DIR = Path(__file__).resolve().parent.parent

# * SECURITY WARNING: keep the SECRET_KEY used in production secret!
# * SECURITY WARNING: don't run with DEBUG turned on in production!

SECRET_KEY = config("SECRET_KEY", default="Make sure to set your own secret key!")

DEBUG = config("ENVIRONMENT", default="development") == "development"

ALLOWED_HOSTS = config("ALLOWED_HOSTS", cast=Csv(), default="localhost,127.0.0.1")

NAVIGATION_TYPE = config("NAVIGATION_TYPE", default="navbar")

ROOT_URLCONF = "conf.urls"

WSGI_APPLICATION = "conf.wsgi.application"

# Home App Configurations

HOME_APP_NAME = config("HOME_APP_NAME", default="apps.home")

HOME_APP_LABEL = HOME_APP_NAME.split(".")[-1]


# Databases
# https://docs.djangoproject.com/en/stable/ref/settings/#databases
# https://docs.djangoproject.com/en/stable/ref/databases/

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "lib" / f"{config('DB_NAME', default='db')}.sqlite3",
    }
}

if config("DB_POSTGRESQL", default=False, cast=bool):
    try:
        DATABASES = {
            "default": {
                "ENGINE": "django.db.backends.postgresql",
                "NAME": config("DB_NAME", default=None),
                "USER": config("DB_USER", default=None),
                "PASSWORD": config("DB_PASSWORD", default=None),
                "HOST": config("DB_HOST", default="localhost"),
                "PORT": config("DB_PORT", default="5432"),
            }
        }
    except (ImproperlyConfigured, OperationalError, ModuleNotFoundError):
        pass  # Falls back to SQLite3


# Email
# https://docs.djangoproject.com/en/stable/topics/email/

EMAIL_BACKEND = config(
    "EMAIL_BACKEND", default="django.core.mail.backends.console.EmailBackend"
)

EMAIL_USE_TLS = True

EMAIL_USE_SSL = False

EMAIL_PORT = "587"

EMAIL_HOST_USER = config("EMAIL_HOST_USER", default=None)

EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD", default=None)

EMAIL_HOST = config("EMAIL_HOST", default=None)


# Installed Apps
# https://docs.djangoproject.com/en/stable/ref/applications/

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "django_filters",
    "sass_processor",
    "phonenumber_field",
    "apps.core",
    HOME_APP_NAME,
]

if DEBUG:
    INSTALLED_APPS.append("django_browser_reload")


# Default Auto Field
# https://docs.djangoproject.com/en/stable/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# Rest Framework
# https://www.django-rest-framework.org/

REST_FRAMEWORK = {
    # "DEFAULT_AUTHENTICATION_CLASSES": [
    #     "rest_framework.authentication.SessionAuthentication",
    # ],
    # "DEFAULT_PERMISSION_CLASSES": [
    #     # "rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly",
    # ],
}


# Auth
# https://docs.djangoproject.com/en/stable/ref/settings/#auth
# https://docs.djangoproject.com/en/stable/ref/settings/#auth-password-validators

if HOME_APP_LABEL:
    AUTH_USER_MODEL = f"{HOME_APP_LABEL}.User"

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# Middleware
# https://docs.djangoproject.com/en/stable/topics/http/middleware/
# https://docs.djangoproject.com/en/stable/ref/middleware/

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

if DEBUG:
    MIDDLEWARE.append("django_browser_reload.middleware.BrowserReloadMiddleware")


# Templates
# https://docs.djangoproject.com/en/stable/topics/templates/
# https://docs.djangoproject.com/en/stable/ref/settings/#templates

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]


# Static files (CSS, Sass/SCSS, JavaScript, Images)
# https://docs.djangoproject.com/en/stable/howto/static-files/

STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    "sass_processor.finders.CssFinder",
]

STATIC_URL = "lib/static/"

STATIC_ROOT = BASE_DIR / "lib" / "static"

SASS_PRECISION = 8


# Media files
# https://docs.djangoproject.com/en/stable/ref/settings/#media-files

MEDIA_URL = "lib/media/"

MEDIA_ROOT = BASE_DIR / "lib" / "media"


# Cache
# https://docs.djangoproject.com/en/stable/topics/cache/

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.db.DatabaseCache",
        "LOCATION": "django_cache",
        "TIMEOUT": 300,  # Optional: Default cache timeout in seconds
    }
}


# Internationalization
# https://docs.djangoproject.com/en/stable/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Africa/Nairobi"

USE_I18N = True

USE_TZ = True
