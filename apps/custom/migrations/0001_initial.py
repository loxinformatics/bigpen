# Generated by Django 5.2.3 on 2025-06-16 22:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, help_text='Optional. Image representing the category.', null=True, upload_to='shop/categories/')),
                ('bootstrap_icon', models.CharField(blank=True, help_text="Optional. Bootstrap icon class or path for the category. Example: 'bi bi-cart' for a shopping cart icon. Find icons at [Bootstrap Icons](https://icons.getbootstrap.com/).", max_length=255)),
                ('name', models.CharField(help_text='Name of the category.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optional. Description of the category.')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('order', models.PositiveIntegerField(default=1, help_text='Display order (lower numbers - zero included - appear first)')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='core/user')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the item.', max_length=255)),
                ('image', models.ImageField(default='/shop/items/default_item_image.jpg', help_text='Main image for the item.', upload_to='shop/items/')),
                ('bootstrap_icon', models.CharField(blank=True, help_text="Optional. Bootstrap icon class or path for the item. Example: 'bi bi-cart' for a shopping cart icon. Find icons at [Bootstrap Icons](https://icons.getbootstrap.com/).", max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optional. Detailed description of the item.')),
                ('quantity', models.PositiveIntegerField(default=0, help_text='Available quantity in stock.')),
                ('is_featured', models.BooleanField(default=False, help_text='Mark as featured item.')),
                ('original_price', models.DecimalField(decimal_places=2, help_text='Original price of the item.', max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, default=0, help_text='Optional. Discount amount to subtract from the original price.', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the item was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the item was last updated.')),
                ('category', models.ForeignKey(help_text='Category this item belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='custom.category')),
            ],
        ),
        migrations.CreateModel(
            name='ItemImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Image for the item.', upload_to='shop/items/')),
                ('item', models.ForeignKey(help_text='Item this image belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='otherImages', to='custom.item')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fulfilled', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='custom.item')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='custom.order')),
            ],
        ),
    ]
