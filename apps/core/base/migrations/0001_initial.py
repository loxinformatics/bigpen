# Generated by Django 5.2.1 on 2025-06-03 09:59

import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmailAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Email address (e.g., user@example.com)', max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this email address should be displayed')),
                ('is_primary', models.BooleanField(default=False, help_text='Mark as primary email address. If is_active is False, this will be ignored.')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Email Address',
                'verbose_name_plural': 'Email Addresses',
                'ordering': ['order', 'email'],
            },
        ),
        migrations.CreateModel(
            name='OrgDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('org_name', 'Organization Name'), ('org_description', 'Organization Description'), ('org_url', 'Organization URL'), ('org_theme_color', 'Organization Theme Color')], max_length=25, unique=True)),
                ('value', models.CharField(help_text='Value for the organization detail (e.g., name, description, etc.)', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Organization Detail',
                'verbose_name_plural': 'Organization Details',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OrgGraphic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('org_logo', 'Organization Logo'), ('org_favicon', 'Organization Favicon'), ('org_apple_touch_icon', 'Organization Apple Touch Icon')], max_length=25, unique=True)),
                ('image', models.ImageField(help_text='Image file for logos, favicons, etc.', upload_to='base/site')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Organization Graphic',
                'verbose_name_plural': 'Organization Graphics',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', phonenumber_field.modelfields.PhoneNumberField(help_text='Phone number (e.g., +254712345678 or 0712345678)', max_length=128, region='KE', unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this phone number should be displayed')),
                ('is_primary', models.BooleanField(default=False, help_text='Mark as primary phone number. If is_active is False, this will be ignored.')),
                ('use_for_whatsapp', models.BooleanField(default=False, help_text='Whether this phone number should be used for WhatsApp. If is_active is False, this will be ignored.')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Phone Number',
                'verbose_name_plural': 'Phone Numbers',
                'ordering': ['order', 'number'],
            },
        ),
        migrations.CreateModel(
            name='PhysicalAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, help_text='Optional custom label for this address', max_length=100, unique=True)),
                ('building', models.CharField(blank=True, help_text='Building name or number (e.g., Britam Tower, Block A)', max_length=100)),
                ('street_address', models.CharField(help_text='Street address including house number and street name', max_length=255)),
                ('city', models.CharField(help_text='City name', max_length=100)),
                ('state_province', models.CharField(blank=True, help_text='State, province, or county (e.g., Vihiga County)', max_length=100)),
                ('postal_code', models.CharField(blank=True, help_text='ZIP code, postal code, or equivalent', max_length=20)),
                ('country', models.CharField(default='Kenya', help_text='Country name', max_length=100)),
                ('map_embed_url', models.URLField(blank=True, help_text='Google Maps/Other map provider embed URL for displaying in iframes (e.g., https://www.google.com/maps/embed?pb=...)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this address should be displayed')),
                ('is_primary', models.BooleanField(default=False, help_text='Mark as primary address which is used for contact forms and maps. If is_active is False, this will be ignored.')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Physical Address',
                'verbose_name_plural': 'Physical Addresses',
                'ordering': ['order', 'label', 'city'],
            },
        ),
        migrations.CreateModel(
            name='SocialMediaLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'X (formerly Twitter)'), ('instagram', 'Instagram'), ('linkedin', 'LinkedIn'), ('youtube', 'YouTube'), ('tiktok', 'TikTok'), ('pinterest', 'Pinterest'), ('snapchat', 'Snapchat'), ('discord', 'Discord'), ('telegram', 'Telegram'), ('github', 'GitHub'), ('reddit', 'Reddit'), ('twitch', 'Twitch')], max_length=20, unique=True)),
                ('icon', models.CharField(blank=True, help_text='Bootstrap icon class (auto-populated based on name)', max_length=50)),
                ('url', models.URLField(help_text='URL to your selected social media profile')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this social media link should be displayed')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Social Media Link',
                'verbose_name_plural': 'Social Media Links',
                'ordering': ['order', 'name'],
            },
        ),
    ]
