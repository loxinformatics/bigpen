# Generated by Django 5.2.4 on 2025-07-09 16:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=1, help_text='Display order (lower numbers - zero included - appear first)')),
                ('bootstrap_icon', models.CharField(blank=True, help_text="Optional. Bootstrap icon class or path for the item. Example: 'bi bi-cart' for a shopping cart icon. Find icons at [Bootstrap Icons](https://icons.getbootstrap.com/).", max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time last updated.')),
                ('image', models.ImageField(blank=True, help_text='Optional. Image representing the category.', null=True, upload_to='portfolio/categories/')),
                ('name', models.CharField(help_text='Name of the category.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optional. Description of the category.')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this category is active and visible to customers.')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=1, help_text='Display order (lower numbers - zero included - appear first)')),
                ('bootstrap_icon', models.CharField(blank=True, help_text="Optional. Bootstrap icon class or path for the item. Example: 'bi bi-cart' for a shopping cart icon. Find icons at [Bootstrap Icons](https://icons.getbootstrap.com/).", max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time last updated.')),
                ('name', models.CharField(help_text='Name of the item.', max_length=255)),
                ('main_image', models.ImageField(blank=True, help_text='Main image for the item.', null=True, upload_to='portfolio/items/')),
                ('description', models.TextField(blank=True, help_text='Optional. Detailed description of the item.')),
                ('quantity', models.PositiveIntegerField(default=0, help_text='Total quantity in stock.')),
                ('reserved_quantity', models.PositiveIntegerField(default=0, help_text='Quantity reserved for pending orders.')),
                ('low_stock_threshold', models.PositiveIntegerField(default=5, help_text='Alert when stock falls below this number.')),
                ('min_order_quantity', models.PositiveIntegerField(default=1, help_text='Minimum quantity that can be ordered at once.')),
                ('max_order_quantity', models.PositiveIntegerField(blank=True, help_text='Maximum quantity that can be ordered at once (optional).', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this item is active and available for purchase.')),
                ('is_featured', models.BooleanField(default=False, help_text='Mark as featured item.')),
                ('original_price', models.DecimalField(decimal_places=2, help_text='Original price of the item.', max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, default=0, help_text='Optional. Discount amount to subtract from the original price.', max_digits=5)),
                ('category', models.ForeignKey(help_text='Category this item belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='ecommerce.category')),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ItemImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time last updated.')),
                ('image', models.ImageField(help_text='Additional image for the item.', upload_to='portfolio/items/other_images/')),
                ('alt_text', models.CharField(blank=True, help_text='Alternative text for accessibility.', max_length=255)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this image should be displayed.')),
                ('item', models.ForeignKey(help_text='Item this image belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='other_images', to='ecommerce.item')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', help_text='Current status of the order', max_length=20)),
                ('assigned_at', models.DateTimeField(blank=True, help_text='When the order was assigned to staff', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fulfilled', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, help_text='Internal notes about the order')),
                ('assigned_to', models.ForeignKey(blank=True, help_text='Staff member assigned to work on this order', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_orders', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='Customer who placed the order', on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Quantity of this item in the order')),
                ('price_at_time', models.DecimalField(blank=True, decimal_places=2, help_text='Price of the item when the order was placed (for historical accuracy)', max_digits=10, null=True)),
                ('item', models.ForeignKey(help_text='The item being ordered', on_delete=django.db.models.deletion.CASCADE, to='ecommerce.item')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='ecommerce.order')),
            ],
            options={
                'unique_together': {('order', 'item')},
            },
        ),
    ]
